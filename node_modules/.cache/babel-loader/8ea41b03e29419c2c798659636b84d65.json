{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samyuktha\\\\Documents\\\\hotelbookingapp\\\\booking-frontend\\\\src\\\\pages\\\\register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport \"./register.css\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    email: \"\",\n    country: \"\",\n    city: \"\",\n    phone: \"\",\n    isAdmin: false,\n    password: \"\"\n  });\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://pkgstore.datahub.io/core/world-cities/world-cities_json/data/5b3dd46ad10990bca47b04b4739a02ba/world-cities_json.json\").then(res => setData(res.data)).catch(err => console.log(\"Error: \", err));\n  }, []);\n  const {\n    loading,\n    error,\n    dispatch\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  var selectedCountryCities = [];\n\n  const handleChange = (e, field) => {\n    if (field === \"country\") {\n      setCredentials(prev => ({ ...prev,\n        country: e ? e.value : \"\",\n        city: \"\"\n      }));\n    } else if (field === \"city\") {\n      setCredentials(prev => ({ ...prev,\n        city: e ? e.value : \"\"\n      }));\n    } else {\n      const {\n        id,\n        value\n      } = e.target;\n      setCredentials(prev => ({ ...prev,\n        [id]: value\n      }));\n    }\n  };\n\n  const countryList = [...new Set(data.map(item => item.country))]; // console.log(countryList);\n\n  const filterCountryOptions = inputValue => {\n    return countryList.filter(country => {\n      var _country$toLowerCase;\n\n      return (_country$toLowerCase = country.toLowerCase()) === null || _country$toLowerCase === void 0 ? void 0 : _country$toLowerCase.startsWith(inputValue === null || inputValue === void 0 ? void 0 : inputValue.toLowerCase());\n    }).map(country => ({\n      label: country,\n      value: country\n    }));\n  };\n\n  const filterCityOptions = inputValue => {\n    const selectedCountry = credentials.country;\n    selectedCountryCities = data.filter(city => city.country === selectedCountry).map(city => city.name);\n    return selectedCountryCities.filter(city => {\n      var _city$toLowerCase;\n\n      return (_city$toLowerCase = city.toLowerCase()) === null || _city$toLowerCase === void 0 ? void 0 : _city$toLowerCase.startsWith(inputValue === null || inputValue === void 0 ? void 0 : inputValue.toLowerCase());\n    }).map(city => ({\n      label: city,\n      value: city\n    }));\n  };\n\n  const handleClick = async e => {\n    e.preventDefault();\n    dispatch({\n      type: \"REGISTER_START\"\n    });\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/auth/register\", credentials);\n      console.log(credentials);\n      dispatch({\n        type: \"RESISTER_SUCCESS\",\n        payload: res.data.details\n      });\n      alert(JSON.stringify(res.data));\n      navigate(\"/\");\n    } catch (err) {\n      dispatch({\n        type: \"REGISTER_FAILURE\",\n        payload: err.response.data\n      });\n      console.log(\"ERROR: \", err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        id: \"username\",\n        onChange: handleChange,\n        className: \"rInput\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        id: \"email\",\n        onChange: handleChange,\n        className: \"rInput\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: credentials.country ? {\n          label: credentials.country,\n          value: credentials.country\n        } : null,\n        onChange: selectedOption => handleChange(selectedOption, \"country\"),\n        id: \"country\",\n        options: filterCountryOptions(credentials.country),\n        placeholder: \"Country\",\n        className: \"rInput\",\n        required: true,\n        noOptionsMessage: _ref => {\n          let {\n            inputValue\n          } = _ref;\n          return inputValue ? \"Country doesn't exist\" : \"Type to search\";\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: credentials.city ? {\n          label: credentials.city,\n          value: credentials.city\n        } : null,\n        onChange: selectedOption => handleChange(selectedOption, \"city\"),\n        id: \"city\",\n        options: filterCityOptions(credentials.city),\n        placeholder: \"City\",\n        className: \"rInput\",\n        required: true,\n        noOptionsMessage: _ref2 => {\n          let {\n            inputValue\n          } = _ref2;\n          return inputValue ? \"City doesn't exist\" : \"Type to search\";\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        pattern: \"[0-9]{10}\",\n        placeholder: \"Phone\",\n        id: \"phone\",\n        onChange: handleChange,\n        className: \"rInput\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        id: \"password\",\n        onChange: handleChange,\n        className: \"rInput\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: loading,\n        onClick: handleClick,\n        className: \"rButton\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"Y8vJhKXJbvXQ7HxGf0gpA6lPAh4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Samyuktha/Documents/hotelbookingapp/booking-frontend/src/pages/register/Register.jsx"],"names":["axios","useContext","useEffect","useState","useNavigate","AuthContext","Select","Register","credentials","setCredentials","username","email","country","city","phone","isAdmin","password","data","setData","get","then","res","catch","err","console","log","loading","error","dispatch","navigate","selectedCountryCities","handleChange","e","field","prev","value","id","target","countryList","Set","map","item","filterCountryOptions","inputValue","filter","toLowerCase","startsWith","label","filterCityOptions","selectedCountry","name","handleClick","preventDefault","type","post","payload","details","alert","JSON","stringify","response","selectedOption","message"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport \"./register.css\";\r\n\r\n\r\nimport Select from \"react-select\";\r\n\r\n\r\n\r\nconst Register = () => {\r\n    const [credentials, setCredentials] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        country: \"\",\r\n        city: \"\",\r\n        phone: \"\",\r\n        isAdmin: false,\r\n        password: \"\",\r\n    });\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(\"https://pkgstore.datahub.io/core/world-cities/world-cities_json/data/5b3dd46ad10990bca47b04b4739a02ba/world-cities_json.json\")\r\n            .then(res => setData(res.data))\r\n            .catch(err => console.log(\"Error: \", err));\r\n\r\n    }, []);\r\n\r\n    const { loading, error, dispatch } = useContext(AuthContext);\r\n\r\n    const navigate = useNavigate()\r\n    var selectedCountryCities = [];\r\n    \r\n\r\n    const handleChange = (e, field) => {\r\n        if (field === \"country\") {\r\n            \r\n            setCredentials((prev) => ({\r\n                ...prev,\r\n                country: e ? e.value : \"\",\r\n                city: \"\"\r\n            }));\r\n        } else if (field === \"city\") {\r\n            setCredentials((prev) => ({\r\n                ...prev,\r\n                city: e ? e.value : \"\",\r\n            }));\r\n        }\r\n        else {\r\n            const { id, value } = e.target;\r\n            setCredentials((prev) => ({ ...prev, [id]: value }));\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const countryList = [...new Set(data.map(item => item.country))];\r\n\r\n    // console.log(countryList);\r\n    const filterCountryOptions = (inputValue) => {\r\n        return countryList\r\n            .filter((country) =>\r\n                country.toLowerCase()?.startsWith(inputValue?.toLowerCase())\r\n            )\r\n            .map((country) => ({\r\n                label: country,\r\n                value: country,\r\n            }));\r\n    };\r\n    const filterCityOptions = (inputValue) => {\r\n        const selectedCountry = credentials.country;\r\n        selectedCountryCities = data.filter(city => city.country === selectedCountry).map(city => city.name);\r\n\r\n        return selectedCountryCities\r\n            .filter((city) =>\r\n                city.toLowerCase()?.startsWith(inputValue?.toLowerCase())\r\n            )\r\n            .map((city) => ({\r\n                label: city,\r\n                value: city,\r\n            }));\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: \"REGISTER_START\" });\r\n        try {\r\n            const res = await axios.post(\"http://localhost:5000/api/auth/register\", credentials);\r\n            console.log(credentials);\r\n            dispatch({ type: \"RESISTER_SUCCESS\", payload: res.data.details });\r\n            alert(JSON.stringify(res.data));\r\n            \r\n            navigate(\"/\")\r\n        } catch (err) {\r\n            dispatch({ type: \"REGISTER_FAILURE\", payload: err.response.data });\r\n            console.log(\"ERROR: \", err);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"register\">\r\n            <div className=\"rContainer\">\r\n\r\n                <input type=\"text\" placeholder=\"Username\" id=\"username\" onChange={handleChange} className=\"rInput\" required />\r\n                <input type=\"email\" placeholder=\"Email\" id=\"email\" onChange={handleChange} className=\"rInput\" required />\r\n                <Select\r\n                    value={credentials.country ? { label: credentials.country, value: credentials.country } : null}\r\n                    onChange={(selectedOption) => handleChange(selectedOption, \"country\")}\r\n                    id=\"country\"\r\n                    options={filterCountryOptions(credentials.country)}\r\n                    placeholder=\"Country\"\r\n                    className=\"rInput\"\r\n                    required\r\n                    noOptionsMessage={({ inputValue }) =>\r\n                        inputValue ? \"Country doesn't exist\" : \"Type to search\"\r\n                    }\r\n                />\r\n\r\n                <Select\r\n                    value={credentials.city ? { label: credentials.city, value: credentials.city } : null}\r\n                    onChange={(selectedOption) => handleChange(selectedOption, \"city\")}\r\n                    id=\"city\"\r\n                    options={filterCityOptions(credentials.city)}\r\n                    placeholder=\"City\"\r\n                    className=\"rInput\"\r\n                    required\r\n                    noOptionsMessage={({ inputValue }) =>\r\n                        inputValue ? \"City doesn't exist\" : \"Type to search\"\r\n                    }\r\n                />\r\n\r\n                <input type=\"tel\" pattern=\"[0-9]{10}\" placeholder=\"Phone\" id=\"phone\" onChange={handleChange} className=\"rInput\" required />\r\n                {/*<input type=\"password\" placeholder=\"password\" id=\"password\" onChange={handleChange} className=\"rInput\"/>*/}\r\n                <input type=\"password\" placeholder=\"password\" id=\"password\" onChange={handleChange} className=\"rInput\" required />\r\n                <button disabled={loading} onClick={handleClick} className=\"rButton\">\r\n                    Register\r\n                </button>\r\n                {error && <span>{error.message}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n\r\n"]},"metadata":{},"sourceType":"module"}